name: Build and Deploy to Azure Container Apps

on:
  push:
    branches:
      - main

env:
  ACR_NAME: acrcmfajinkyab.azurecr.io   # Azure Container Registry (ACR) Name
  SERVICE_NAME: myservice       # Microservice Name
  RESOURCE_GROUP: RG-Global-RavinderRana-Appteam
  ACA_ENV: acaenvdev-rav
  LOCATION: eastus
  IMAGE_TAG: latest
  IMAGE_NAME: my-service

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to Azure
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}

      - name: Log in to ACR
        run: az acr login --name ${{ secrets.ACR_NAME }}

      - name: Build and Push Image to ACR
        run: |
          if [[ -f "./Dockerfile" ]]; then
             echo "Dockerfile found. Building with Docker..."
             docker build -t ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }} .
             docker push ${{ secrets.ACR_NAME }}.azurecr.io/${{ env.IMAGE_NAME }}:${{ github.sha }}
          else
             echo "⚠️ No Dockerfile found. Using az acr build from GitHub..."
             az acr build --registry ${{ secrets.ACR_NAME }} --image ${{ env.IMAGE_NAME }}:${{ github.sha }} https://github.com/v-rav/skycom.git
          fi
  


      - name: Deploy to Azure Container Apps
        run: |
          az containerapp up \
            --name ${{ env.SERVICE_NAME }} \
            --resource-group ${{ env.RESOURCE_GROUP }} \
            --environment ${{ env.ACA_ENV }} \
            --image ${{ secrets.ACR_NAME }}/${{ env.SERVICE_NAME }}:${{ env.IMAGE_TAG }} \
            --location ${{ env.LOCATION }} \
            --target-port 8080 \
            --ingress external
