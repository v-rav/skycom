<!--
//=============================================================================
// DlgNotice
// 送信完了ダイアログ表示
// 
// Copyright (C) SKYCOM Corporation
// EandM
//=============================================================================
-->

@using SKYCOM.DLManagement.Data
@inject Message _message

<div>
    <div class="modal @modalClass" tabindex="-1" role="dialog" style="display:@modalDisplay">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title">@_message.MessageList["SendSuccessTitle"]</h5>
                </div>
                <div class="modal-body">
                    <p>@message</p>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-dismiss="modal" @onclick="Close">@_message.MessageList["Close"]</button>
                </div>
            </div>
        </div>
    </div>
</div>


@if (isShowBackdrop)
{
    <div class="modal-backdrop fade show"></div>
}


@code {
    private string message = "";
    private string modalDisplay = "none;";
    private string modalClass = "";
    private bool isShowBackdrop = false;

    /// <summary>
    /// 通知ダイアログを表示する
    /// </summary>
    /// <param name="displayMessage"></param>
    public async void Open(string displayMessage)
    {
        this.message = displayMessage;
        modalDisplay = "block;";
        modalClass = "Show";
        isShowBackdrop = true;
        await InvokeAsync(() => StateHasChanged());

    }

    /// <summary>
    /// 閉じるボタン押下処理
    /// </summary>
    async void Close()
    {
        modalDisplay = "none";
        modalClass = "";
        isShowBackdrop = false;
        await InvokeAsync(() => StateHasChanged());
    }
}
